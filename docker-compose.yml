services: 
  postgres-users:
    image: postgres:14
    container_name: postgres-users
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: rspot_users
    ports:
      - "5432:5432"
    volumes:
      - ./migrations/users:/docker-entrypoint-initdb.d
      - ./pg-data-users:/var/lib/postgresql/data

  postgres-booking:
    image: postgres:14
    container_name: postgres-booking
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: rspot_booking
    ports:
      - "5434:5432"
    volumes:
      - ./migrations/booking:/docker-entrypoint-initdb.d
      - ./pg-data-booking:/var/lib/postgresql/data

  mongo-places: 
    image: mongo
    container_name: mongo-places
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db
      - ./migrations/places/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: always

  users_api:
    build:
      context: .
      dockerfile: src/Services/UserService/RSpot.Users.API/Dockerfile
    depends_on:
      - postgres-users
    environment:
      RunDbInit: "false"
      ASPNETCORE_ENVIRONMENT: Development
      JwtSettings__Secret: ОченьДлинныйИБезопасныйКлючДляHS256Минимум32Байта
      JwtSettings__Issuer: RSpot
      JwtSettings__Audience: RSpotUsers
      JwtSettings__ExpiryMinutes: "60"
      ConnectionStrings__UsersDb: Host=postgres-users;Port=5432;Database=rspot_users;Username=postgres;Password=example
      RabbitMq__Host: rabbitmq-rspot
    ports:
      - "5001:80"

  booking_api:
    build:
      context: .
      dockerfile: src/Services/BookingService/RSpot.Booking.API/Dockerfile
    depends_on:
      - postgres-booking
      - rabbitmq-rspot
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      JwtSettings__Secret: ОченьДлинныйИБезопасныйКлючДляHS256Минимум32Байта
      JwtSettings__Issuer: RSpot
      JwtSettings__Audience: RSpotUsers
      JwtSettings__ExpiryMinutes: "60"
      ConnectionStrings__BookingDb: Host=postgres-booking;Port=5432;Database=rspot_booking;Username=postgres;Password=example
      RabbitMq__Host: rabbitmq-rspot
      MongoSettings__ConnectionString: mongodb://mongo-places:27017
      MongoSettings__DatabaseName: rspot_places
    ports:
      - "5003:8080"
      
  notification_worker:
    build:
      context: .
      dockerfile: src/Services/NotificationService/RSpot.Notification.WorkerService/Dockerfile
    depends_on:
      - rabbitmq-rspot
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      RabbitMq__Host: rabbitmq-rspot
    volumes:
      - ./logs/notification:/app/Logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"      # максимум 10 МБ на файл
        max-file: "5"        # максимум 5 файлов (то есть ~50 МБ)


  places_api:
    build:
      context: .
      dockerfile: src/Services/PlaceService/RSpot.Places.API/Dockerfile
    depends_on:
      - postgres-users
      - rabbitmq-rspot
      - mongo-places
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      JwtSettings__Secret: ОченьДлинныйИБезопасныйКлючДляHS256Минимум32Байта
      JwtSettings__Issuer: RSpot
      JwtSettings__Audience: RSpotUsers
      JwtSettings__ExpiryMinutes: "60"
      ConnectionStrings__UsersDb: Host=postgres-users;Port=5432;Database=rspot_users;Username=postgres;Password=example
      RabbitMq__Host: rabbitmq-rspot
      MongoSettings__ConnectionString: mongodb://mongo-places:27017
      MongoSettings__DatabaseName: rspot_places
    ports:
      - "5002:8080"

  rabbitmq-rspot:
    image: rabbitmq:3-management
    container_name: rabbitmq-rspot
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

volumes:
  mongo_data:
