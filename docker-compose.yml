services:
  postgres:
    image: postgres:14
    container_name: rspot-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: rspot_users
    ports:
      - "5432:5432"
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
      - ./pg-data:/var/lib/postgresql/data          # ← здесь будут храниться данные БД
      
  booking_postgres:
    image: postgres:14
    container_name: rspot-booking-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: rspot_booking
    ports:
      - "5434:5432"  # Чтобы не пересекался с users
    volumes:
      - ./migrations/booking:/docker-entrypoint-initdb.d
    
  mongodb:
    image: mongo
    container_name: rspot-mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db
    restart: always

  users_api:
    build:
      context: .
      dockerfile: src/Services/UserService/RSpot.Users.API/Dockerfile
    depends_on:
      - postgres
    environment:
      RunDbInit: "false"
      ASPNETCORE_ENVIRONMENT: Development
      JwtSettings__Secret: ОченьДлинныйИБезопасныйКлючДляHS256Минимум32Байта
      JwtSettings__Issuer: RSpot
      JwtSettings__Audience: RSpotUsers
      JwtSettings__ExpiryMinutes: "60"
      ConnectionStrings__UsersDb: Host=postgres;Port=5432;Database=rspot_users;Username=postgres;Password=example
      RabbitMq__Host: rabbitmq
    ports:
      - "5001:80"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rspot-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always

  booking_api:
    build:
      context: .
      dockerfile: src/Services/BookingService/RSpot.Booking.API/Dockerfile
    depends_on:
      - postgres
      - rabbitmq
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "5003:80"

  places_api:
    build:
      context: .
      dockerfile: src/Services/PlaceService/RSpot.Places.API/Dockerfile
    depends_on:
      - postgres
      - rabbitmq
      - mongodb
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      JwtSettings__Secret: ОченьДлинныйИБезопасныйКлючДляHS256Минимум32Байта
      JwtSettings__Issuer: RSpot
      JwtSettings__Audience: RSpotUsers
      JwtSettings__ExpiryMinutes: "60"
      ConnectionStrings__UsersDb: Host=postgres;Port=5432;Database=rspot_users;Username=postgres;Password=example
      RabbitMq__Host: rabbitmq
      MongoSettings__ConnectionString: mongodb://mongodb:27017
      MongoSettings__DatabaseName: rspot_places
    ports:
      - "5002:8080"

volumes:
  mongo_data:
